{"ast":null,"code":"var _jsxFileName = \"/Users/jlopez/Desktop/Development/Projects/chat-app-react-node/client/src/components/ChatRoomPage.js\";\nimport React, { useEffect } from \"react\";\nimport SocketContext from './SocketContext';\nimport ChatBox from './ChatBox';\n\nconst ChatRoomPage = props => {\n  /*#__PURE__*/\n  React.createElement(SocketContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, socket => /*#__PURE__*/React.createElement(YourDeeplyNestedComponent, Object.assign({}, props, {\n    socket: socket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 20\n    }\n  }))); // Create a state for the input element's values\n  // Create a state containing the message history \n  // Upon mounting, join the specified room\n\n  useEffect(() => {\n    const {\n      username,\n      room\n    } = props.location.state;\n    socket.emit('joinRoom', {\n      username,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n        window.location.href = '/';\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ChatBox, {\n    socket: socket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ChatRoomPage;","map":{"version":3,"sources":["/Users/jlopez/Desktop/Development/Projects/chat-app-react-node/client/src/components/ChatRoomPage.js"],"names":["React","useEffect","SocketContext","ChatBox","ChatRoomPage","props","socket","username","room","location","state","emit","error","alert","window","href"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B;AAAA,sBAAC,aAAD,CAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,MAAM,iBAAI,oBAAC,yBAAD,oBAA+BD,KAA/B;AAAsC,IAAA,MAAM,EAAEC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADf,EAD4B,CAK5B;AACA;AACA;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAAEM,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAqBH,KAAK,CAACI,QAAN,CAAeC,KAA1C;AACAJ,IAAAA,MAAM,CAACK,IAAP,CAAY,UAAZ,EAAwB;AAAEJ,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAxB,EAA6CI,KAAD,IAAW;AACnD,UAAIA,KAAJ,EAAW;AACPC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACAE,QAAAA,MAAM,CAACL,QAAP,CAAgBM,IAAhB,GAAuB,GAAvB;AACH;AACJ,KALD;AAMH,GARQ,CAAT;AASA,sBACI,uDACI,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAET,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAtBD;;AAwBA,eAAeF,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport SocketContext from './SocketContext'\nimport ChatBox from './ChatBox';\n\nconst ChatRoomPage = (props) => {\n    <SocketContext.Consumer>\n        {socket => <YourDeeplyNestedComponent {...props} socket={socket} />}\n    </SocketContext.Consumer>\n\n    // Create a state for the input element's values\n    // Create a state containing the message history \n    // Upon mounting, join the specified room\n    useEffect(() => {\n        const { username, room } = props.location.state\n        socket.emit('joinRoom', { username, room }, (error) => {\n            if (error) {\n                alert(error)\n                window.location.href = '/'\n            }\n        })\n    })\n    return (\n        <>\n            <ChatBox socket={socket} />\n        </>\n    )\n}\n\nexport default ChatRoomPage"]},"metadata":{},"sourceType":"module"}