{"ast":null,"code":"var _jsxFileName = \"/Users/jlopez/Desktop/Development/Projects/chat-app-react-node/client/src/components/ChatBox.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Moment from 'react-moment';\nimport socket from './socket';\n\nconst ChatBox = props => {\n  // Create a state for the input element's values\n  // Create a state containing the message history\n  const [inputValue, setInputValue] = useState('');\n  const [messageHistory, setMessageHistory] = useState([]); // Create a reference for the input and submit button elements\n\n  const inputMessage = useRef(null);\n  const submitButton = useRef(null); // Upon mounting, check for message received from the server and join the specified room\n\n  useEffect(() => {\n    socket.on('message', messageObject => {\n      updateMessageHistory(messageObject);\n    });\n  }); // SOCKET FUNCTIONS\n\n  function updateMessageHistory(messageObject) {\n    // Add message object containing the text, creation date, and username of sender\n    setMessageHistory([...messageHistory, messageObject]);\n  }\n\n  function sendMessage(message) {\n    socket.emit('newMessage', message, error => {\n      submitButton.current.removeAttribute('disabled');\n\n      if (error) {\n        return console.log(error);\n      }\n\n      console.log('The message was delivered');\n      inputMessage.current.value = '';\n      setInputValue('');\n      inputMessage.current.focus();\n    });\n  } // FORM\n\n\n  function onInputChange(e) {\n    setInputValue(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    submitButton.current.setAttribute('disabled', 'disabled');\n    sendMessage(inputValue);\n  }\n\n  function renderChat() {\n    return messageHistory.map((message, index = 0) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"message\",\n        key: index++,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"message__name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, message.username), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"message__meta\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Moment, {\n        date: message.createdAt,\n        format: \"h:mm a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, message.text));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatdisplay__button\",\n    onClick: props.chatToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-arrow-circle-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"chat__messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, renderChat()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"compose\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"chatBox\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputMessage,\n    value: inputValue,\n    onChange: onInputChange,\n    className: \"input\",\n    name: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"send__button\",\n    ref: submitButton,\n    id: \"submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-arrow-circle-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default ChatBox;","map":{"version":3,"sources":["/Users/jlopez/Desktop/Development/Projects/chat-app-react-node/client/src/components/ChatBox.js"],"names":["React","useState","useEffect","useRef","Moment","socket","ChatBox","props","inputValue","setInputValue","messageHistory","setMessageHistory","inputMessage","submitButton","on","messageObject","updateMessageHistory","sendMessage","message","emit","error","current","removeAttribute","console","log","value","focus","onInputChange","e","target","handleSubmit","preventDefault","setAttribute","renderChat","map","index","username","createdAt","text","chatToggle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Moment from 'react-moment';\n\nimport socket from './socket';\n\nconst ChatBox = (props) => {\n    // Create a state for the input element's values\n    // Create a state containing the message history\n    const [inputValue, setInputValue] = useState('');\n    const [messageHistory, setMessageHistory] = useState([]);\n\n    // Create a reference for the input and submit button elements\n    const inputMessage = useRef(null);\n    const submitButton = useRef(null);\n\n    // Upon mounting, check for message received from the server and join the specified room\n    useEffect(() => {\n        socket.on('message', (messageObject) => {\n            updateMessageHistory(messageObject);\n        });\n    });\n\n    // SOCKET FUNCTIONS\n\n    function updateMessageHistory(messageObject) {\n        // Add message object containing the text, creation date, and username of sender\n        setMessageHistory([...messageHistory, messageObject]);\n    }\n\n    function sendMessage(message) {\n        socket.emit('newMessage', message, (error) => {\n            submitButton.current.removeAttribute('disabled');\n            if (error) {\n                return console.log(error);\n            }\n            console.log('The message was delivered');\n            inputMessage.current.value = '';\n            setInputValue('');\n            inputMessage.current.focus();\n        });\n    }\n\n    // FORM\n    function onInputChange(e) {\n        setInputValue(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        submitButton.current.setAttribute('disabled', 'disabled');\n        sendMessage(inputValue);\n    }\n\n    function renderChat() {\n        return messageHistory.map((message, index = 0) => {\n            return (\n                <div className=\"message\" key={index++}>\n                    <p>\n                        <span className=\"message__name\">\n                            {message.username}\n                        </span>\n                        <span className=\"message__meta\">\n                            {\n                                <Moment\n                                    date={message.createdAt}\n                                    format=\"h:mm a\"\n                                />\n                            }\n                        </span>\n                    </p>\n                    <p>{message.text}</p>\n                </div>\n            );\n        });\n    }\n\n    return (\n        <div className=\"chat__main\">\n            <div className=\"chatdisplay__button\" onClick={props.chatToggle}>\n                <i className=\"fas fa-arrow-circle-left\"></i>\n            </div>\n            <ul className=\"chat__messages\">{renderChat()}</ul>\n            <div className=\"compose\">\n                <form id=\"chatBox\" onSubmit={handleSubmit}>\n                    <input\n                        ref={inputMessage}\n                        value={inputValue}\n                        onChange={onInputChange}\n                        className=\"input\"\n                        name=\"message\"\n                    />\n                    <button\n                        className=\"send__button\"\n                        ref={submitButton}\n                        id=\"submit\"\n                        type=\"submit\"\n                    >\n                        <i className=\"fas fa-arrow-circle-right\"></i>\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default ChatBox;\n"]},"metadata":{},"sourceType":"module"}