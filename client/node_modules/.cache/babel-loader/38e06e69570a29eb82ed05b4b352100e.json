{"ast":null,"code":"var _jsxFileName = \"/Users/jlopez/Desktop/WebDev/Projects/chat-app-react-node/client/src/components/App.js\";\nimport React, { useState, useEffect, createRef } from \"react\";\nimport '../styles/app.css';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:3001');\n\nconst App = props => {\n  const [inputValue, setInputValue] = useState('');\n  const [messageHistory, setMessageHistory] = useState([]);\n  const inputMessage = createRef();\n  const submitButton = createRef();\n  const [refReady, setRefReady] = useState(false);\n  useEffect(() => {\n    socket.on('message', message => {\n      onMessageReceived(message);\n    });\n    console.log(submitButton.current);\n    setRefReady(true);\n  }); // SOCKET FUNCTIONS\n\n  function onMessageReceived(message) {\n    updateMessageHistory(message);\n  }\n\n  function updateMessageHistory(message) {\n    setMessageHistory([...messageHistory, message]);\n  }\n\n  function sendMessage(message) {\n    socket.emit('newMessage', message, error => {\n      console.log(submitButton.current);\n      submitButton.current.removeAttribute('disabled');\n\n      if (error) {\n        return console.log(error);\n      }\n\n      console.log('The message was delivered');\n      inputMessage.current.value = '';\n      inputMessage.current.focus();\n    });\n  } // FORM\n\n\n  function onInputChange(e) {\n    setInputValue(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    submitButton.current.setAttribute('disabled', 'disabled');\n    sendMessage(inputValue);\n  }\n\n  function renderChatBox() {\n    return messageHistory.map((message, index = 0) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index++,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }\n      }, message);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, renderChatBox()), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"chatBox\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputMessage,\n    value: inputValue,\n    onChange: onInputChange,\n    id: \"inputChat\",\n    name: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    ref: submitButton,\n    id: \"submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/jlopez/Desktop/WebDev/Projects/chat-app-react-node/client/src/components/App.js"],"names":["React","useState","useEffect","createRef","io","socket","App","props","inputValue","setInputValue","messageHistory","setMessageHistory","inputMessage","submitButton","refReady","setRefReady","on","message","onMessageReceived","console","log","current","updateMessageHistory","sendMessage","emit","error","removeAttribute","value","focus","onInputChange","e","target","handleSubmit","preventDefault","setAttribute","renderChatBox","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport '../styles/app.css';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:3001');\n\nconst App = (props) => {\n    const [inputValue, setInputValue] = useState('')\n    const [messageHistory, setMessageHistory] = useState([])\n\n    const inputMessage = createRef()\n    const submitButton = createRef()\n    const [refReady, setRefReady] = useState(false)\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            onMessageReceived(message)\n        })\n        console.log(submitButton.current)\n        setRefReady(true)\n    })\n\n\n    // SOCKET FUNCTIONS\n    function onMessageReceived(message) {\n        updateMessageHistory(message)\n    }\n\n    function updateMessageHistory(message) {\n        setMessageHistory([...messageHistory, message])\n    }\n\n    function sendMessage(message) {\n        socket.emit('newMessage', message, (error) => {\n            console.log(submitButton.current)\n            submitButton.current.removeAttribute('disabled')\n            if (error) {\n                return console.log(error)\n            }\n            console.log('The message was delivered')\n            inputMessage.current.value = ''\n            inputMessage.current.focus()\n        })\n    }\n\n    // FORM\n    function onInputChange(e) {\n        setInputValue(e.target.value)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        submitButton.current.setAttribute('disabled', 'disabled')\n        sendMessage(inputValue)\n    }\n\n\n    function renderChatBox() {\n        return messageHistory.map((message, index = 0) => {\n            return <li key={index++}>{message}</li>\n        })\n    }\n\n    return (\n        <>\n            <ul id=\"messages\">{renderChatBox()}</ul>\n            <form id=\"chatBox\" onSubmit={handleSubmit}>\n                <input ref={inputMessage} value={inputValue} onChange={onInputChange} id=\"inputChat\" name=\"message\" />\n                <button ref={submitButton} id=\"submit\" type=\"submit\">Submit</button>\n            </form>\n        </>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}