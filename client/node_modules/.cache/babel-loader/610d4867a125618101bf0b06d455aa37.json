{"ast":null,"code":"var _jsxFileName = \"/Users/jlopez/Desktop/WebDev/Projects/chat-app-react-node/client/src/components/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport '../styles/app.css';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:3001');\n\nconst App = props => {\n  const [inputValue, setInputValue] = useState('');\n  const [messageHistory, setMessageHistory] = useState([]);\n  useEffect(() => {\n    socket.on('message', message => {\n      onMessageReceived(message);\n    });\n  });\n  const $chatBox = document.getElementById('chatBox');\n  const $chatMessages = document.getElementById('messages');\n  const $chatBoxButton = document.getElementById('submit');\n  const $chatBoxInput = document.querySelector('input');\n  const $locationButton = document.getElementById('send-location_button'); // SOCKET FUNCTIONS\n\n  function onMessageReceived(message) {\n    updateMessageHistory(message);\n  }\n\n  function updateMessageHistory(message) {\n    setMessageHistory([...messageHistory, message]);\n  }\n\n  function sendMessage(message) {\n    socket.emit('newMessage', message, error => {\n      $chatBoxButton.removeAttribute('disabled');\n\n      if (error) {\n        return console.log(error);\n      }\n\n      console.log('The message was delivered');\n      $chatBoxInput.value = '';\n      $chatBoxInput.focus();\n    });\n  } // FORM\n\n\n  function onInputChange(e) {\n    setInputValue(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    sendMessage(inputValue);\n  }\n\n  function renderChatBox() {\n    return messageHistory.map((message, index = 0) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index++,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }\n      }, message);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, renderChatBox()), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"chatBox\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputMessage,\n    value: inputValue,\n    onChange: onInputChange,\n    id: \"inputChat\",\n    name: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/jlopez/Desktop/WebDev/Projects/chat-app-react-node/client/src/components/App.js"],"names":["React","useState","useEffect","io","socket","App","props","inputValue","setInputValue","messageHistory","setMessageHistory","on","message","onMessageReceived","$chatBox","document","getElementById","$chatMessages","$chatBoxButton","$chatBoxInput","querySelector","$locationButton","updateMessageHistory","sendMessage","emit","error","removeAttribute","console","log","value","focus","onInputChange","e","target","handleSubmit","preventDefault","renderChatBox","map","index","inputMessage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport '../styles/app.css';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:3001');\n\nconst App = (props) => {\n    const [inputValue, setInputValue] = useState('')\n    const [messageHistory, setMessageHistory] = useState([])\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            onMessageReceived(message)\n        })\n    });\n\n    const $chatBox = document.getElementById('chatBox')\n    const $chatMessages = document.getElementById('messages')\n    const $chatBoxButton = document.getElementById('submit')\n    const $chatBoxInput = document.querySelector('input')\n    const $locationButton = document.getElementById('send-location_button')\n\n    // SOCKET FUNCTIONS\n    function onMessageReceived(message) {\n        updateMessageHistory(message)\n    }\n\n    function updateMessageHistory(message) {\n        setMessageHistory([...messageHistory, message])\n    }\n\n    function sendMessage(message) {\n        socket.emit('newMessage', message, (error) => {\n            $chatBoxButton.removeAttribute('disabled')\n            if (error) {\n                return console.log(error)\n            }\n            console.log('The message was delivered')\n            $chatBoxInput.value = ''\n            $chatBoxInput.focus()\n        })\n    }\n\n    // FORM\n    function onInputChange(e) {\n        setInputValue(e.target.value)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        sendMessage(inputValue)\n    }\n\n\n    function renderChatBox() {\n        return messageHistory.map((message, index = 0) => {\n            return <li key={index++}>{message}</li>\n        })\n    }\n\n    return (\n        <>\n            <ul id=\"messages\">{renderChatBox()}</ul>\n            <form id=\"chatBox\" onSubmit={handleSubmit}>\n                <input ref={inputMessage} value={inputValue} onChange={onInputChange} id=\"inputChat\" name=\"message\" />\n                <button id=\"submit\" type=\"submit\">Submit</button>\n            </form>\n            {/* <button id=\"send-location_button\">Send Location</button> */}\n        </>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}