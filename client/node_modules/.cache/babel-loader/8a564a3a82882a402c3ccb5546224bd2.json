{"ast":null,"code":"var _jsxFileName = \"/Users/jlopez/Desktop/Development/Projects/chat-app-react-node/client/src/components/ChatRoomPage.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Moment from 'react-moment';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:3001');\n\nconst ChatRoomPage = props => {\n  // Create a state for the input element's values\n  // Create a state containing the message history \n  // Upon mounting, join the specified room\n  useEffect(() => {\n    const {\n      username,\n      room\n    } = props.location.state;\n    socket.emit('joinRoom', {\n      username,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n        window.location.href = '/';\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"chat__messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, renderChatBox()), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"chatBox\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputMessage,\n    value: inputValue,\n    onChange: onInputChange,\n    id: \"inputChat\",\n    name: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    ref: submitButton,\n    id: \"submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};\n\nexport default ChatRoomPage;","map":{"version":3,"sources":["/Users/jlopez/Desktop/Development/Projects/chat-app-react-node/client/src/components/ChatRoomPage.js"],"names":["React","useState","useEffect","useRef","Moment","io","socket","ChatRoomPage","props","username","room","location","state","emit","error","alert","window","href","renderChatBox","handleSubmit","inputMessage","inputValue","onInputChange","submitButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB;;AAEA,MAAME,YAAY,GAAIC,KAAD,IAAW;AAC5B;AACA;AACA;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAAEO,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAqBF,KAAK,CAACG,QAAN,CAAeC,KAA1C;AACAN,IAAAA,MAAM,CAACO,IAAP,CAAY,UAAZ,EAAwB;AAAEJ,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAxB,EAA6CI,KAAD,IAAW;AACnD,UAAIA,KAAJ,EAAW;AACPC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACAE,QAAAA,MAAM,CAACL,QAAP,CAAgBM,IAAhB,GAAuB,GAAvB;AACH;AACJ,KALD;AAMH,GARQ,CAAT;AASA,sBACI,uDACI;AAAI,IAAA,EAAE,EAAC,gBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBC,aAAa,EAAtC,CADJ,eAEI;AAAM,IAAA,EAAE,EAAC,SAAT;AAAmB,IAAA,QAAQ,EAAEC,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,GAAG,EAAEC,YAAZ;AAA0B,IAAA,KAAK,EAAEC,UAAjC;AAA6C,IAAA,QAAQ,EAAEC,aAAvD;AAAsE,IAAA,EAAE,EAAC,WAAzE;AAAqF,IAAA,IAAI,EAAC,SAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,GAAG,EAAEC,YAAb;AAA2B,IAAA,EAAE,EAAC,QAA9B;AAAuC,IAAA,IAAI,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAFJ,CADJ;AASH,CAtBD;;AAwBA,eAAehB,YAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Moment from 'react-moment';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:3001');\n\nconst ChatRoomPage = (props) => {\n    // Create a state for the input element's values\n    // Create a state containing the message history \n    // Upon mounting, join the specified room\n    useEffect(() => {\n        const { username, room } = props.location.state\n        socket.emit('joinRoom', { username, room }, (error) => {\n            if (error) {\n                alert(error)\n                window.location.href = '/'\n            }\n        })\n    })\n    return (\n        <>\n            <ul id=\"chat__messages\">{renderChatBox()}</ul>\n            <form id=\"chatBox\" onSubmit={handleSubmit}>\n                <input ref={inputMessage} value={inputValue} onChange={onInputChange} id=\"inputChat\" name=\"message\" />\n                <button ref={submitButton} id=\"submit\" type=\"submit\">Submit</button>\n            </form>\n        </>\n    )\n}\n\nexport default ChatRoomPage"]},"metadata":{},"sourceType":"module"}