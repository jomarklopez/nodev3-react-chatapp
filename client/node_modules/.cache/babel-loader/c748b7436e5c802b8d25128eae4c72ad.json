{"ast":null,"code":"var _jsxFileName = \"/Users/jlopez/Desktop/Development/Projects/chat-app-react-node/client/src/components/ChatBox.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Moment from \"react-moment\";\nimport socket from \"./socket\";\n\nconst ChatBox = props => {\n  // Create a state for the input element's values\n  // Create a state containing the message history\n  const [inputValue, setInputValue] = useState(\"\");\n  const [messageHistory, setMessageHistory] = useState([]); // Create a reference for the input and submit button elements\n\n  const inputMessage = useRef(null);\n  const submitButton = useRef(null); // Upon mounting, check for message received from the server and join the specified room\n\n  useEffect(() => {\n    socket.on(\"message\", messageObject => {\n      updateMessageHistory(messageObject);\n    });\n  }); // SOCKET FUNCTIONS\n\n  function updateMessageHistory(messageObject) {\n    // Add message object containing the text, creation date, and username of sender\n    setMessageHistory([...messageHistory, messageObject]);\n  }\n\n  function sendMessage(message) {\n    socket.emit(\"newMessage\", message, error => {\n      submitButton.current.removeAttribute(\"disabled\");\n\n      if (error) {\n        return console.log(error);\n      }\n\n      console.log(\"The message was delivered\");\n      inputMessage.current.value = \"\";\n      inputMessage.current.focus();\n    });\n  } // FORM\n\n\n  function onInputChange(e) {\n    setInputValue(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    submitButton.current.setAttribute(\"disabled\", \"disabled\");\n    sendMessage(inputValue);\n  }\n\n  function renderChat() {\n    return messageHistory.map((message, index = 0) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"message\",\n        key: index++,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"message__name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, message.username), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"message__meta\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Moment, {\n        date: message.createdAt,\n        format: \"h:mm a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 16\n        }\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, message.text));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"chat__messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, renderChat()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"compose\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"chatBox\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputMessage,\n    value: inputValue,\n    onChange: onInputChange,\n    className: \"input\",\n    name: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"send__button\",\n    ref: submitButton,\n    id: \"submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-arrow-circle-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default ChatBox;","map":{"version":3,"sources":["/Users/jlopez/Desktop/Development/Projects/chat-app-react-node/client/src/components/ChatBox.js"],"names":["React","useState","useEffect","useRef","Moment","socket","ChatBox","props","inputValue","setInputValue","messageHistory","setMessageHistory","inputMessage","submitButton","on","messageObject","updateMessageHistory","sendMessage","message","emit","error","current","removeAttribute","console","log","value","focus","onInputChange","e","target","handleSubmit","preventDefault","setAttribute","renderChat","map","index","username","createdAt","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Moment from \"react-moment\";\n\nimport socket from \"./socket\";\n\nconst ChatBox = (props) => {\n  // Create a state for the input element's values\n  // Create a state containing the message history\n  const [inputValue, setInputValue] = useState(\"\");\n  const [messageHistory, setMessageHistory] = useState([]);\n\n  // Create a reference for the input and submit button elements\n  const inputMessage = useRef(null);\n  const submitButton = useRef(null);\n\n  // Upon mounting, check for message received from the server and join the specified room\n  useEffect(() => {\n    socket.on(\"message\", (messageObject) => {\n      updateMessageHistory(messageObject);\n    });\n  });\n\n  // SOCKET FUNCTIONS\n\n  function updateMessageHistory(messageObject) {\n    // Add message object containing the text, creation date, and username of sender\n    setMessageHistory([...messageHistory, messageObject]);\n  }\n\n  function sendMessage(message) {\n    socket.emit(\"newMessage\", message, (error) => {\n      submitButton.current.removeAttribute(\"disabled\");\n      if (error) {\n        return console.log(error);\n      }\n      console.log(\"The message was delivered\");\n      inputMessage.current.value = \"\";\n      inputMessage.current.focus();\n    });\n  }\n\n  // FORM\n  function onInputChange(e) {\n    setInputValue(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    submitButton.current.setAttribute(\"disabled\", \"disabled\");\n    sendMessage(inputValue);\n  }\n\n  function renderChat() {\n    return messageHistory.map((message, index = 0) => {\n      return (\n        <div className=\"message\" key={index++}>\n          <p>\n            <span className=\"message__name\">{message.username}</span>\n            <span className=\"message__meta\">\n              {<Moment date={message.createdAt} format=\"h:mm a\" />}\n            </span>\n          </p>\n          <p>{message.text}</p>\n        </div>\n      );\n    });\n  }\n  return (\n    <div className=\"chat__main\">\n      <ul className=\"chat__messages\">{renderChat()}</ul>\n      <div className=\"compose\">\n        <form id=\"chatBox\" onSubmit={handleSubmit}>\n          <input\n            ref={inputMessage}\n            value={inputValue}\n            onChange={onInputChange}\n            className=\"input\"\n            name=\"message\"\n          />\n          <button\n            className=\"send__button\"\n            ref={submitButton}\n            id=\"submit\"\n            type=\"submit\"\n          >\n            <i className=\"fas fa-arrow-circle-right\"></i>\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n"]},"metadata":{},"sourceType":"module"}